[user]
	name = Gergo Gacs
	email = gacsgergo@gmail.com

[github]
	user = jstabitunlikely

[core]
	excludesfile = ~/.config/git/ignore
	editor = nano
	filemode = false
	trustctime = false
	autocrlf = input
	untrackedCache = true
	pager = delta
	ignorecase = false

[pager]
	diff = LESS=FR delta

[commit]
    template = ~/.config/git/message

[credential]
	helper = osxkeychain

[pull]
	rebase = true

[rerere]
	enabled = true

[rebase]
	autoStash = true

[init]
	defaultBranch = main

[push]
	default = simple
	followTags = true
    autoSetupRemote = true

[fetch]
	prune = true

[grep]
	lineNumber = true

[help]
	autocorrect = 30

[pretty]
    log = %Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset

[alias]
    # Status
    s = status --short
    st = diff --name-only --staged
	# REVISIT: this is madness and possible won't be used
    ss = "!f() { git show --shortstat \"${1:-HEAD}\" | awk \"/files? changed/ { gsub(/,/, \\\"\\\", \\$4); gsub(/,/, \\\"\\\", \\$6); print \\\"\\033[32m+\\\" \\$4 \\\" \\033[31m-\\\" \\$6 \\\"\\033[0m\\\" }\"; }; f"

    # List files
    lsa = !git --no-pager ls-files --modified --deleted --other --exclude-standard --deduplicate $(git rev-parse --show-toplevel)
    lsm = !git --no-pager ls-files --modified $(git rev-parse --show-toplevel)
    lso = !git --no-pager ls-files --other --exclude-standard $(git rev-parse --show-toplevel)
    lsi = lso --ignored

    # Grep
    g = grep --break --heading --line-number

	# Files
    a = add
    aa = add --all
    au = add --update
    rt = restore
    rts = restore --staged
	ca = commit --amend
	caf = commit --amend --no-edit
    ci = commit
    cim = commit -m

	# Branches
    b = branch
    cb = checkout -b
	co = checkout
    sw = switch

    # Rebase
    ri = rebase --interactive
	ra = rebase --abort
	rc = rebase --continue
	rh = reset --hard
	rh1 = rh HEAD^

	# Remote
    p = push
	pf = push --force --force-with-lease
    pl = pull

    # Diff
	d = diff --unified=0
	dw = d --word-diff
	patch = !git --no-pager diff --no-color
    diffstat = "!f() { if [ $# -eq 0 ]; then git show --shortstat HEAD | tail -1; else git show --shortstat $1 | tail -1; fi; }; f"

    # Log
    ## Graph with custom format
    ll = log --graph --abbrev-commit --pretty=log
    ## Graph with custom format and only the last commits by default
    l = !git ll ${1:--10}
    ## Fuzzy log, returning the whole log line(s) to the command line
    fll = !git ll --color=always | fzf
    ## Fuzzy log, returning only the SHA(s) to the command line
    fl = !git fll | awk '{print $2}' | xargs -I{} git rev-parse {}
    ## Date of the first commit
	fc = "log --max-parents=0 --pretty=format:'%ad' --date=format:'%Y-%m-%d' -n 1"
	## My commits from the last N (1 by default) days
    ld = "!sh -c \"git ll --since '${1:-1} days ago' --author $(git config user.email)\" -"
    ## New commits since last command i.e., pull
    new = !sh -c 'git log $1@{1}..$1@{0} "$@"'

    # Misc
    ## Browse remote
	h = browse

[diff]
	renames = copies
	indentHeuristic = true
	colorMoved = default
    tool = vscode

[difftool]
	prompt = false

[difftool "vscode"]
	cmd = code --wait --diff $LOCAL $REMOTE
	path =

[merge]
	conflictstyle = diff3
	defaultToUpstream = true
    tool = vscode

[mergetool]
	prompt = false

[mergetool "vscode"]
	cmd = code --wait $MERGED
	trustExitCode = true

[include]
    path = ~/.config/git/themes.gitconfig

[delta]
    true-color=always
    features = arctic-fox
	navigate = true
    hyperlinks = true
    hyperlinks-file-link-format = "vscode://file/{path}:{line}"

[interactive]
    diffFilter = delta --color-only

[color]
	ui = auto
